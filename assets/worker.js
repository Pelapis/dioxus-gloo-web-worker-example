console.log('worker.js is running...');

// Set the dioxus project name
// For the wasm file and js glue script generated by dioxus are named after the project name
const projectName = 'dioxus-gloo-worker-example';

// get url of wasm file using self.location.href and wasm's path
const currentUrl = self.location.href;
console.log('worker url:', currentUrl);
const rootUrl = currentUrl.substring(0, currentUrl.indexOf('/', 8));
console.log('root directory url:', rootUrl);
const wasmUrl = `${rootUrl}/wasm/${projectName}_bg.wasm`;
console.log('wasm file url:', wasmUrl);

// classic worker can use import() to dynamically load modules, but cannot use import keyword syntax
import(`../wasm/${projectName}.js`)
    .then((ex) => ex.default({ module_or_path: wasmUrl }))
    .then((exports) => {
        exports.register_gloo_worker();
        console.log('register_gloo_worker function called from worker');
    })
    .catch((error) => {
        console.log(`error loading wasm module: ${error.message}`);
    });
